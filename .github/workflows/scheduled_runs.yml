name: Trigger Regibox

on:
  workflow_dispatch:
  schedule:
    - cron: "58 10 * * 6,0-3"
jobs:
  build:
    name: Trigger Regibox run
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install Dependencies using Poetry
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install
      - name: Get class date
        run: |
          echo "CLASS_DATE=$(date -d '+2 days' +%F)" >> $GITHUB_ENV
          echo "CLASS_TIME='12:00'" >> $GITHUB_ENV
      - name: Regibox enroll
        run: poetry run python -m regibox ${{ env.CLASS_DATE }} ${{ env.CLASS_TIME }}
        env:
          COOKIE: ${{ secrets.COOKIE }}
      - name: Send mail
        if: always()
        uses: dawidd6/action-send-mail@v2
        with:
          # mail server settings
          server_address: smtp.gmail.com
          server_port: 465
          # user credentials
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          # email subject
          subject: "Regibox Auto-enroll: ${{ job.status }} for ${{ env.CLASS_DATE }} at ${{ env.CLASS_TIME }}"
          # email body as text
          body: Job '${{ github.job }}' in worflow ${{ github.workflow }} of ${{ github.repository }} finished in a ${{ job.status }} state.
          # comma-separated string, send email to
          to: m@rtimlobao.com
          # from email name
          from: Regibox Auto-enroll
