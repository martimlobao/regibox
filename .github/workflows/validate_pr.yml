---
name: Validate Pull Request
on:  # yamllint disable-line rule:truthy
  pull_request:
    branches: [main]

env:
  COOKIE: chocolate_chips

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/
          key: |
            venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install Dependencies using Poetry
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --with dev
      - name: Poetry check
        run: poetry check
      - name: Lint with black
        run: poetry run black --preview --check regibox/ tests/
      - name: Lint with isort
        run: poetry run isort --check-only regibox/ tests/
      - name: Lint with mypy
        run: poetry run mypy regibox/ tests/
      - name: Lint with pylint
        run: poetry run pylint regibox/ tests/
      - name: Lint with ruff
        run: poetry run ruff regibox/ tests/
      - name: Lint with yamllint
        run: poetry run yamllint -s .
      - name: Lint with pyupgrade
        run: poetry run pyupgrade **/*.py
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: |
            venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install Dependencies using Poetry
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --with dev
      - name: Test
        run: |-
          poetry run coverage run --source=regibox/ -m pytest tests/
          poetry run coverage report -m
